name: artifacts
on: 
  push:
  release:
    types: [published]
jobs:
  test:
    environment: STG
    env:
      TEST_RUN: 'test'
      TEST_RESULT: 'pass'
    name: Runs tests
    runs-on: ubuntu-latest
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      
      - name: cache the configs
        id: cache-code
        uses: actions/cache@v3
        with:
          path: |
            config/service1
            config/service2
          key: services-${{ hashFiles('**/config.sh') }}
      
      - name: generate config files
        run: bash config.sh

      - name: Running tests
        run: |
          ls -la
          bash my-script.sh "${{ env.TEST_RUN }}" "${{ env.TEST_RESULT }}"
    
  build:
    needs: test
    name: Build
    outputs:
      build-time: ${{ steps.build_time.outputs.build-time }}
    runs-on: ubuntu-latest
    steps:
      - name: Get the code
        uses: actions/checkout@v3

      - name: cache the configs
        id: cache-code
        uses: actions/cache@v3
        with:
          path: |
            config/service1
            config/service2
          key: services-${{ hashFiles('**/config.sh') }}

      - name: generate config files
        run: bash config.sh
        
      - name: Build
        run: |
          echo "Running The Build ....."
          bash my-script.sh

      - name: build time
        id: build_time
        run: echo "build-time=$(date)" >> $GITHUB_OUTPUT

      - name: Upload Artifacts for s1
        uses: actions/upload-artifact@v3
        with:
          name: service1
          path: service1/

      - name: Upload Artifacts for s2
        uses: actions/upload-artifact@v3
        with:
          name: service2
          path: service2/

  deploy:
    needs: build
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download Service1 artifact
        uses: actions/download-artifact@v3
        with:
          name: service1
          path: services/service1/

      - name: Download Service2 artifact
        uses: actions/download-artifact@v3
        with:
          name: service2
          path: services/service2/
      
      - name: check the files
        run: |
          ls -la
          echo service1:
          cat ./services/service1/text.txt
          echo "service2:"
          cat ./services/service2/text.txt
          echo build time: $(echo ${{ needs.build.outputs.build-time }})
