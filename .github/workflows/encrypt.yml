name: encrypt-passwords
on: 
  workflow_dispatch:
    inputs:
      password:
        required: true
        type: string
      key:
        required: true
        type: string
      
jobs:
  encryption:
    strategy:
      matrix:
        springboot-cli: ['2.0.1', '2.0.2']
    runs-on: ubuntu-latest
    steps:
      - name: Get global node ID
        id: get-repo-id
        uses: nvdaes/get-repository-id@v1
        with:
          repository: setimozac/test-java-encrypt

      - name: Get Password
        run: |
          PASS=$(jq -r '.inputs.password' $GITHUB_EVENT_PATH)
          echo ::add-mask::$PASS
          echo PASS=$PASS >> $GITHUB_ENV

      - name: Get Key
        run: |
          KEY=$(jq -r '.inputs.key' $GITHUB_EVENT_PATH)
          echo ::add-mask::$KEY
          echo KEY=$KEY >> $GITHUB_ENV

      - name: Set up Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
          java-package: 'jdk'

      - name: Install SDKMAN
        run: |
          curl -s "https://get.sdkman.io" | bash
          # source "$HOME/.sdkman/bin/sdkman-init.sh"
          source "/home/runner/.sdkman/bin/sdkman-init.sh"
          sdk version
          sdk list springboot

      - name: Install Springboot CLI
        run: |
          source "/home/runner/.sdkman/bin/sdkman-init.sh"
          sdk install springboot ${{ matrix.springboot-cli }} 
          spring --version
          spring install org.springframework.cloud:spring-cloud-cli:1.3.2.RELEASE
          echo "==========encypting========="
          spring encrypt "${{ env.PASS }}" --key 'ABC'

      - name: encrypt
        run: |
          source "/home/runner/.sdkman/bin/sdkman-init.sh"
          echo "==========encrypting2========="
          echo "PASS: ${{ env.PASS }}"
          echo "KEY: ${{ env.KEY }}"
          ENC_PASS=$(spring encrypt "${{ env.PASS }}" --key "${{ env.KEY }}")
          echo ENC_PASS=$ENC_PASS >> $GITHUB_ENV
          echo "==========decrypting2========="
          P=$(spring decrypt "$ENC_PASS" --key "${{ env.KEY }}")
          if [[ "$P" == "${{ env.PASS }}" ]]
          then
            echo "YEEEEES"
          fi
          echo "Pass for version- ${{ matrix.springboot-cli }}: $P" >> pass.txt
          sleep 5

      - name: Upload File
        uses: actions/upload-artifact@v3
        with:
          name: text-file
          path: pass.txt

  get_file:
    needs: encryption
    runs-on: ubuntu-latest
    steps:
      - name: Get File
        uses: actions/download-artifact@v3
        with:
          name: text-file

      - name: print
        run: |
          ls
          cat pass.txt
      
